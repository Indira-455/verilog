FULL SUBTRACTOR USING HALF ADDERS:

module half_adder(a,b,sum,carry);
  input a,b;
  output sum, carry;
  assign sum= a ^ b;
  assign carry= a & b;
endmodule



module full_subtractor(a,b,c,diff,borrow);
  input a,b,c;
  output diff,borrow;
  wire w1,w2,w3,w4,w5;
  half_adder HA1(w1,b,w2,w3);
  half_adder HA2(w2,c,w4,w5);
  not N1(w1,a);
  not N2(diff,w4);
  or O1(borrow,w5,w3);
endmodule
 

TEST BENCH:
module full_subtractor_tb();
  reg a,b,c;
  wire diff,borrow;
  full_subtractor FS1(.a(a),.b(b),.c(c),.diff(diff),.borrow(borrow));
  initial
    begin
      $monitor("a=%b,b=%b,c=%b,diff=%b,borrow=%b",a,b,c,diff,borrow);
      a=0; b=0; c=0;
      #10; a=0; b=0; c=1;
      #10; a=0; b=1; c=0;
      #10; a=0; b=1; c=1;
      #10; a=1; b=0; c=0;
      #10; a=1; b=0; c=1;
      #10; a=1; b=1; c=0;
      #10; a=1; b=1; c=1;
      #10;
      $finish;
    end
  initial begin
    $dumpfile("dump.vcd");
    $dumpvars(1);
  end
endmodule
  
OUTPUT:
# KERNEL: a=0,b=0,c=0,diff=0,borrow=0
# KERNEL: a=0,b=0,c=1,diff=1,borrow=1
# KERNEL: a=0,b=1,c=0,diff=1,borrow=1
# KERNEL: a=0,b=1,c=1,diff=0,borrow=1
# KERNEL: a=1,b=0,c=0,diff=1,borrow=0
# KERNEL: a=1,b=0,c=1,diff=0,borrow=0
# KERNEL: a=1,b=1,c=0,diff=0,borrow=0
# KERNEL: a=1,b=1,c=1,diff=1,borrow=1
      

  